@using System.Globalization
@typeparam TItem

<div class="taglist @Class">
    <div class="tag-input">
        @if (Items is { Count: > 0 })
        {
            <div class="selected">
                @foreach (TItem item in Items.OrderBy(i => i.TagName))
                {
                    <span class="tag">@item.TagName<button @onclick="() => RemoveItem(item)"><span class="fa-regular fa-circle-xmark"></span></button></span>
                }
            </div>
        }
        @if (Selection != null)
        {
            <select @bind="SelectionSelected">
                <option value="0">Add a value...</option>
                @if (Items != null)
                {
                    @foreach (TItem item in Selection.Where(i => !Items.Contains(i)))
                    {
                        <option value="@item.Id">@item.TagName</option>
                    }
                }
            </select>
        }
        else
        {
            <input type="text" @bind="Search" @bind:event="oninput" @bind:after="StartSearchTimer" @onblur="OnBlur" placeholder="Type to search..." />
        }
    </div>
    @if (Search.Trim().Length > 0)
    {
        <div class="tag-suggestions">
            @if (SearchResults.Any())
            {
                @foreach (TItem searchResultItem in SearchResults)
                {
                    <button class="suggestion" @onmousedown="() => AddItem(searchResultItem)">@searchResultItem.TagName</button>
                }
            }
            @{
                string newName = CultureInfo.CurrentUICulture.TextInfo.ToTitleCase(Search);
                var item = new TItem { TagName = newName };
                if (Items != null && Items.All(g => g.TagName != item.TagName))
                {
                    <button class="suggestion new" title="Create new" @onmousedown="() => AddNewItem(newName)"><span class="fa-solid fa-plus-circle"></span>Create new: "@newName"</button>
                }
            }

        </div>
    }
</div>