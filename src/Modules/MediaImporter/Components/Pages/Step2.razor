@page "/admin/mediaimporter/step2"
@layout InnerLayout
@rendermode @(new InteractiveServerRenderMode(prerender:false))
@using Whitestone.SegnoSharp.Modules.MediaImporter.Components.Layouts
@attribute [Authorize]

<div class="header-container">
    <h1>Media importer</h1>
</div>

<div class="card-grid">
    <div class="card grid-span-12">
        <div class="wizard-steps">
            <ul>
                <li class="done">Select Folder</li>
                <li class="active">Select Files</li>
                <li>Verify Metadata</li>
                <li>Import</li>
            </ul>
        </div>
    </div>
    <div class="card grid-span-12">
        @if (_loading)
        {
            <div class="alert alert-info">Loading. Please wait.</div>
        }
        else if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="alert alert-error">@ErrorMessage</div>
        }
        else
        {
            <div class="form-group">
                <label>Selected path</label>
                <input type="text" value="@ImporterState.SelectedFolder?.FullName" disabled="disabled" />
            </div>
            <div class="form-group">
                <label for="chkImportSubfolders2" class="checkbox-label">Include subfolders</label>
                <input id="chkImportSubfolders2" type="checkbox" @bind="ImporterState.ImportSubfolders" disabled="disabled" />
            </div>
            <div class="form-group normalization">
                <label for="txtNormalizationArticles">Normalization articles (comma separated)</label>
                <input id="txtNormalizationArticles" type="text" @bind="Settings.NormalizationArticles" disabled="@(!Settings.NormalizeAlbumTitles)" />
                <div class="flex-center">
                    <input type="checkbox" @bind="Settings.NormalizeAlbumTitles" />
                </div>
            </div>
            <div class="folder-list">
                <div class="folder-list-header">
                    <div class="grid-span-9">Filename</div>
                    <div class="grid-span-1 text-center">
                        <div>
                            <label for="chkAllImport">Import file</label>
                        </div>
                        <div>
                            <input id="chkAllImport" type="checkbox" @bind="@AllImport" />
                        </div>
                    </div>
                    <div class="grid-span-2 text-center">
                        <div>
                            <label for="chkAllImportPlaylist">Import to playlist</label>
                        </div>
                        <div>
                            <input id="chkAllImportPlaylist" type="checkbox" @bind="@AllImportPlaylist" />
                        </div>
                    </div>
                </div>
                <div class="folder-list-body">
                    @for (var i = 0; i < ImporterState.SelectedFiles.Length; i++)
                    {
                        // Because @bind uses a lambda, and the i variable constantly gets changed, bind to a local variable instead
                        int localIndex = i;
                        <div class="grid">
                            <div class="grid-span-9">@ImporterState.SelectedFiles[localIndex].Filename</div>
                            <div class="grid-span-1"><input type="checkbox" @bind="@ImporterState.SelectedFiles[localIndex].Import" /></div>
                            <div class="grid-span-2"><input type="checkbox" @bind="@ImporterState.SelectedFiles[localIndex].ImportToPlaylist" /></div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
    <div class="grid-span-12 text-right">
        <button class="secondary" @onclick="OnBackClick">&lt; Back</button>
        <button class="primary" @onclick="OnNextClick" disabled="@(!string.IsNullOrEmpty(ErrorMessage))">Continue &gt;</button>
    </div>
</div>