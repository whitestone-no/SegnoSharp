@page "/playlist/history"
@rendermode InteractiveServer
@layout InnerLayout
@using Whitestone.SegnoSharp.Shared.Attributes
@using Whitestone.SegnoSharp.Modules.Playlist.Components.Layouts
@using Whitestone.SegnoSharp.Modules.Playlist.ViewModels
@attribute [ModuleMenu("History", typeof(Playlist))]

<div class="card-grid">
    <div class="card card-span-12">
        <div class="card-header card-grid">
            <div class="card-span-8">
                History
            </div>
            <div class="card-span-4 text-right">
                <label for="date-selector">Select date</label>
                <input type="date" id="date-selector" min="@MinDate.ToString("yyyy-MM-dd")" max="@SystemClock.Now.ToString("yyyy-MM-dd")" @bind="SelectedDate" @bind:after="OnDateChanged" />
            </div>
        </div>
        <div class="card-body">
            @foreach (HistoryViewModel playlistItem in HistoryItems)
            {
                <div class="card-grid playlist-item @(playlistItem.CurrentlyPlaying ? "currently-playing" : null)">
                    <div class="card-span-2 center-all">
                        <div>
                            @playlistItem.Played.ToString("yyyy-MM-dd HH:mm:ss")
                            @if (playlistItem.CurrentlyPlaying)
                            {
                                <br />
                                <em>Currently playing</em>
                            }
                        </div>
                    </div>
                    <div class="card-span-1 center-all">
                        @if (playlistItem.HasAlbumCover)
                        {
                            <img src="@HashingUtil.GetAlbumCoverUri(playlistItem.AlbumId, 50)" alt="@(playlistItem.AlbumTitle) - Cover" class="bordered" />
                        }
                    </div>
                    <div class="card-span-8 flex-center">
                        <div>
                            <b>@playlistItem.AlbumTitle</b> <em>(@playlistItem.Artists)</em><br />
                            @playlistItem.TrackTitle
                        </div>
                    </div>
                    <div class="card-span-1 center-all">@playlistItem.Length</div>
                </div>
            }
        </div>

        @if (HistoryTotalPages > 1)
        {
            <div class="card-footer">
                <div class="pagination">
                    <button class="secondary @(HistoryCurrentPage == 1 ? "hidden" : "")" @onclick="() => OnHistoryPageChanged(1)" title="First page">&lt;&lt;</button>
                    <button class="secondary @(HistoryCurrentPage == 1 ? "hidden" : "")" @onclick="() => OnHistoryPageChanged(HistoryCurrentPage - 1)" title="Previous page">&lt;</button>
                    <div class="info">
                        <span>Page</span>
                        <input type="number" min="1" max="@HistoryTotalPages" @bind="HistoryCurrentPage" @bind:after="() => OnHistoryPageChanged(HistoryCurrentPage)" />
                        <span>of @HistoryTotalPages</span>
                    </div>
                    <button class="secondary @(HistoryCurrentPage == HistoryTotalPages ? "hidden" : "")" @onclick="() => OnHistoryPageChanged(HistoryCurrentPage + 1)" title="Next page">&gt;</button>
                    <button class="secondary @(HistoryCurrentPage == HistoryTotalPages ? "hidden" : "")" @onclick="() => OnHistoryPageChanged(HistoryTotalPages)" title="Last page">&gt;&gt;</button>
                </div>
            </div>
        }
    </div>
</div>