@page "/admin/playlist/settings"
@rendermode InteractiveServer
@layout InnerLayout
@using Whitestone.SegnoSharp.Modules.Playlist.Components.Layouts
@using Whitestone.SegnoSharp.Shared.Attributes
@using Whitestone.SegnoSharp.Shared.Interfaces
@using Whitestone.SegnoSharp.Shared.Models
@attribute [Authorize]
@attribute [ModuleMenu("Settings", typeof(Playlist), true)]

<div class="header-container">
    <h1>Playlist rules</h1>
</div>

<div class="alert alert-warning">Warning: Changes are saved immediately</div>

<div class="card-grid">
    <div class="card grid-span-12">
        <div class="settings-body">
            <div class="form-group">
                <ObjectPropertyEditor Object="PlaylistSettings" Property="@nameof(PlaylistSettings.MinimumNumberOfSongs)"/>
            </div>
            <div class="form-group">
                <ObjectPropertyEditor Object="PlaylistSettings" Property="@nameof(PlaylistSettings.MinimumTotalDuration)"/>
            </div>
        </div>
    </div>
</div>

<div class="header-container">
    <h2>Playlist processors</h2>
</div>

<div class="processors card-grid">
    @foreach (IPlaylistProcessor processor in PlaylistProcessors.OrderByDescending(p => p.Settings.SortOrder))
    {
        <div class="card grid-span-12 @(processor.Settings.Enabled ? "" : "disabled")">
            <div class="card-header-container">
                @if (processor.Settings.SortOrder > 0)
                {
                    <input type="checkbox" title="@(processor.Settings.Enabled ? "Enabled" : "Disabled")" @bind="processor.Settings.Enabled" />
                }

                <h3>@processor.Name</h3>

                @if (processor.Settings.SortOrder > 0 && processor.Settings.SortOrder < PlaylistProcessors.Count() - 1)
                {
                    <button @onclick="() => MoveProcessorUp(processor)" class="secondary">Move up</button>
                }

                @if (processor.Settings.SortOrder > 1)
                {
                    <button @onclick="() => MoveProcessorDown(processor)" class="secondary">Move down</button>
                }
            </div>
            <div>
                <div class="settings-body">
                    <ObjectEditor Object="processor.Settings" IgnoreProperties="@([nameof(PlaylistProcessorSettings.Enabled), nameof(PlaylistProcessorSettings.SortOrder)])" />
                </div>
            </div>
        </div>
    }
</div>